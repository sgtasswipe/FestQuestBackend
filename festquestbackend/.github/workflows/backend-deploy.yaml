name: Build and Deploy with PEM Key Conversion

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Convert and Setup SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
        run: |
          # Create SSH directory
          mkdir -p ~/.ssh
          
          # Write the PEM key to a file
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa_pem
          chmod 600 ~/.ssh/id_rsa_pem
          
          # Convert PEM to OpenSSH format
          ssh-keygen -p -m PEM -N '' -f ~/.ssh/id_rsa_pem
          
          # Rename converted key
          mv ~/.ssh/id_rsa_pem ~/.ssh/id_rsa
          
          # Verify key
          ssh-keygen -l -f ~/.ssh/id_rsa

      - name: Deploy to Azure VM
        env:
          AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
          GITHUB_PAT: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
        run: |
          # SSH into Azure VM and perform deployment
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@$AZURE_VM_IP << EOF
            # Navigate to the deployment directory
            

            # Remove existing repositories
            rm -rf FestQuestFrontend
            rm -rf FestQuestBackend

            # Clone repositories using PAT
            git clone https://${GITHUB_PAT}@github.com/sgtasswipe/FestQuestFrontend
            git clone https://${GITHUB_PAT}@github.com/sgtasswipe/FestQuestBackend

            # Backend Deployment
            cd FestQuestBackend
            docker build -t festquest-backend:latest .
            docker stop festquest-backend || true
            docker rm festquest-backend || true
            docker run -d --name festquest-backend -p 8080:8080 festquest-backend:latest

            # Frontend Deployment
            cd ../FestQuestFrontend/src/docker
            docker build -t festquest-frontend:latest .
            docker stop festquest-frontend || true
            docker rm festquest-frontend || true
            docker run -d --name festquest-frontend -p 80:80 festquest-frontend:latest
          EOF